##FUNCIONES
#Importamos funciones
import requests, zipfile, os, shutil, glob, yara 

#Comprobamos si existe la carpeta y sino la creamos
def create(folder):
    if not os.path.exists(folder):
        os.mkdir(folder)

#Copiamos los ficheros a la carpeta de destino
def copyfiles(src,dst):
    for root, dirs, files in os.walk(src):
        for filename in files:
                if(".yara" in filename or ".yar" in filename):
                    shutil.copy(os.path.join(root, filename), os.path.join(dst,filename))

#Descargamos el repositorio en formato ZIP
def download(dst, path):
    r = requests.get(path)
    open(dst, "wb").write(r.content)

#Descomprimimos el ZIP
def unzip(filename, dst):
    with zipfile.ZipFile(filename, "r") as zip_ref:
        zip_ref.extractall(dst)

#Localizamos y compilamos las reglas Yara
def compile(filepaths, save_folder):
    compiled_rules = dict()
    for folder in filepaths: 
        for filename in glob.glob(folder + "/*.yar*"):
            namespace = os.path.basename(os.path.splitext(filename)[0])     
            compiled_rules[namespace] = filename
    rules = yara.compile(filepaths = compiled_rules)
    if os.path.exists(save_folder):
        os.remove(save_folder)
    rules.save(save_folder)

##VARIABLES
#Definimos directorio raiz
root = os.path.dirname(os.path.abspath(__file__))

#Definimos carpeta para reglas compiladas
compiled_rules = os.path.join(root,"rules", "rules-compiled")

#Ficheros ZIP
cape_filename = os.path.join(root, "CAPEv2.zip")
reversingLabs_filename = os.path.join(root, "reversinglabs-yara-rules-develop.zip")
MalGamy_filename = os.path.join(root, "YARA_Rules-main.zip")
IrishIRL_filename = os.path.join(root, "yara-rules-main.zip")
PhishingKit_filename = os.path.join(root, "PhishingKit-Yara-Rules-master.zip")
mwbar_filename = os.path.join(root, "yara-rules-master.zip")
malpedia_filename = os.path.join(root, "signator-rules-main.zip")
droberson_filename = os.path.join(root, "yararules-master.zip")

#Carpeta descomprimida
capev2_folder = os.path.join(root, "CAPEv2-master")
yara_cape_folder = os.path.join(root, "CAPEv2-master", "data", "yara", "CAPE")
reversingLabs_folder = os.path.join(root, "reversinglabs-yara-rules-develop")
MalGamy_folder = os.path.join(root, "YARA_Rules-main")
IrishIRL_folder = os.path.join(root, "yara-rules-main")
PhishingKit_folder = os.path.join(root, "PhishingKit-Yara-Rules-master")
mwbar_folder = os.path.join(root, "yara-rules-master")
malpedia_folder = os.path.join(root, "signator-rules-main")
droberson_folder = os.path.join(root, "yararules-master")

#Carpetas locales
local_cape_folder = os.path.join(root, "rules", "Cape")
local_reversingLabs_folder = os.path.join(root, "rules", "reversingLabs")
local_MalGamy_folder = os.path.join(root, "rules", "MalGamy")
local_IrishIRL_folder = os.path.join(root, "rules", "IrishIRL")
local_PhishingKit_folder = os.path.join(root, "rules",  "PhishingKit")
local_mwbar_folder = os.path.join(root, "rules",  "mwbar")
local_malpedia_folder = os.path.join(root, "rules",  "malpedia")
local_droberson_folder = os.path.join(root, "rules",  "droberson")

#Carpetas para compilar
directories = [local_cape_folder, local_reversingLabs_folder, local_MalGamy_folder, local_IrishIRL_folder, local_PhishingKit_folder, local_mwbar_folder, local_malpedia_folder, local_droberson_folder]


##CODIGO
#Creamos carpeta "rules"
create(folder="rules")

#CAPEv2
download(dst=cape_filename, path="https://codeload.github.com/kevoreilly/CAPEv2/zip/refs/heads/master")
unzip(filename=cape_filename, dst=root)
create(folder=local_cape_folder)                                                        
shutil.copytree(src=yara_cape_folder, dst=local_cape_folder, dirs_exist_ok=True)
shutil.rmtree(capev2_folder)
os.remove(cape_filename)

#ReversingLabs
download(dst=reversingLabs_filename, path="https://codeload.github.com/reversinglabs/reversinglabs-yara-rules/zip/refs/heads/develop")
unzip(filename=reversingLabs_filename, dst=root)
create(folder=local_reversingLabs_folder)
copyfiles(reversingLabs_folder, local_reversingLabs_folder)
shutil.rmtree(reversingLabs_folder)
os.remove(reversingLabs_filename)

#Malgami
download(dst=MalGamy_filename, path="https://codeload.github.com/MalGamy/YARA_Rules/zip/refs/heads/main")
unzip(filename=MalGamy_filename, dst=root)
create(folder=local_MalGamy_folder)                                                        
shutil.copytree(src=MalGamy_folder, dst=local_MalGamy_folder, dirs_exist_ok=True)
shutil.rmtree(MalGamy_folder)
os.remove(MalGamy_filename)

#IrishIRL
download(dst=IrishIRL_filename, path="https://codeload.github.com/IrishIRL/yara-rules/zip/refs/heads/main")
unzip(filename=IrishIRL_filename, dst=root)
create(folder=local_IrishIRL_folder)                                                        
shutil.copytree(src=IrishIRL_folder, dst=local_IrishIRL_folder, dirs_exist_ok=True)
shutil.rmtree(IrishIRL_folder)
os.remove(IrishIRL_filename)

#PhishingKit
download(dst=PhishingKit_filename, path="https://codeload.github.com/t4d/PhishingKit-Yara-Rules/zip/refs/heads/master")
unzip(filename=PhishingKit_filename, dst=root)
create(folder=local_PhishingKit_folder)                                                        
shutil.copytree(src=PhishingKit_folder, dst=local_PhishingKit_folder, dirs_exist_ok=True)
shutil.rmtree(PhishingKit_folder)
os.remove(PhishingKit_filename)

#mwbar
download(dst=mwbar_filename, path="https://codeload.github.com/mwbar/yara-rules/zip/refs/heads/master")
unzip(filename=mwbar_filename, dst=root)
create(folder=local_mwbar_folder)                                                        
shutil.copytree(src=mwbar_folder, dst=local_mwbar_folder, dirs_exist_ok=True)
shutil.rmtree(mwbar_folder)
os.remove(mwbar_filename)

#Malpedia
download(dst=malpedia_filename, path="https://codeload.github.com/malpedia/signator-rules/zip/refs/heads/main")
unzip(filename=malpedia_filename, dst=root)
create(folder=local_malpedia_folder)                                                        
shutil.copytree(src=malpedia_folder, dst=local_malpedia_folder, dirs_exist_ok=True)
shutil.rmtree(malpedia_folder)
os.remove(malpedia_filename)

#Droberson
download(dst=droberson_filename, path="https://codeload.github.com/droberson/yararules/zip/refs/heads/master")
unzip(filename=droberson_filename, dst=root)
create(folder=local_droberson_folder)                                                        
shutil.copytree(src=droberson_folder, dst=local_droberson_folder, dirs_exist_ok=True)
shutil.rmtree(droberson_folder)
os.remove(droberson_filename)

#Compilamos reglas
compile(directories, compiled_rules)